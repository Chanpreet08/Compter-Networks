//
// Generated file, do not edit! Created by nedtool 5.0 from R_PDU.msg.
//

#ifndef __R_PDU_M_H
#define __R_PDU_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0500
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



// cplusplus {{
    #include<map>
     typedef std::map<int,int> Map;
    
// }}

/**
 * Class generated from <tt>R_PDU.msg:25</tt> by nedtool.
 * <pre>
 * packet R_PDU
 * {
 *     int source;
 *     Map distanceVector;
 * }
 * </pre>
 */
class R_PDU : public ::omnetpp::cPacket
{
  protected:
    int source;
    Map distanceVector;

  private:
    void copy(const R_PDU& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const R_PDU&);

  public:
    R_PDU(const char *name=nullptr, int kind=0);
    R_PDU(const R_PDU& other);
    virtual ~R_PDU();
    R_PDU& operator=(const R_PDU& other);
    virtual R_PDU *dup() const {return new R_PDU(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b);

    // field getter/setter methods
    virtual int getSource() const;
    virtual void setSource(int source);
    virtual Map& getDistanceVector();
    virtual const Map& getDistanceVector() const {return const_cast<R_PDU*>(this)->getDistanceVector();}
    virtual void setDistanceVector(const Map& distanceVector);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const R_PDU& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, R_PDU& obj) {obj.parsimUnpack(b);}


#endif // ifndef __R_PDU_M_H

